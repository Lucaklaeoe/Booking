/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

<<<<<<< HEAD
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
=======
const OwnBookingLazyImport = createFileRoute('/ownBooking')()
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

<<<<<<< HEAD
const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
=======
const OwnBookingLazyRoute = OwnBookingLazyImport.update({
  id: '/ownBooking',
  path: '/ownBooking',
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/ownBooking.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/ownBooking': {
      id: '/ownBooking'
      path: '/ownBooking'
      fullPath: '/ownBooking'
      preLoaderRoute: typeof OwnBookingLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
<<<<<<< HEAD
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
=======
  '/ownBooking': typeof OwnBookingLazyRoute
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
<<<<<<< HEAD
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
=======
  '/ownBooking': typeof OwnBookingLazyRoute
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
<<<<<<< HEAD
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
=======
  '/ownBooking': typeof OwnBookingLazyRoute
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
<<<<<<< HEAD
  fullPaths: '/' | '/about' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/login'
  id: '__root__' | '/' | '/about' | '/login'
=======
  fullPaths: '/' | '/ownBooking'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/ownBooking'
  id: '__root__' | '/' | '/ownBooking'
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
<<<<<<< HEAD
  AboutLazyRoute: typeof AboutLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
=======
  OwnBookingLazyRoute: typeof OwnBookingLazyRoute
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
<<<<<<< HEAD
  AboutLazyRoute: AboutLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
=======
  OwnBookingLazyRoute: OwnBookingLazyRoute,
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
<<<<<<< HEAD
        "/about",
        "/login"
=======
        "/ownBooking"
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
<<<<<<< HEAD
    "/about": {
      "filePath": "about.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
=======
    "/ownBooking": {
      "filePath": "ownBooking.lazy.jsx"
>>>>>>> 5c82c3b79723fe5b17bf69db1d5e3e2b3f160598
    }
  }
}
ROUTE_MANIFEST_END */
